// Code generated by MockGen. DO NOT EDIT.
// Source: writer.go

// Package kafka is a generated GoMock package.
package kafka

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIWriter is a mock of IWriter interface.
type MockIWriter struct {
	ctrl     *gomock.Controller
	recorder *MockIWriterMockRecorder
}

// MockIWriterMockRecorder is the mock recorder for MockIWriter.
type MockIWriterMockRecorder struct {
	mock *MockIWriter
}

// NewMockIWriter creates a new mock instance.
func NewMockIWriter(ctrl *gomock.Controller) *MockIWriter {
	mock := &MockIWriter{ctrl: ctrl}
	mock.recorder = &MockIWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWriter) EXPECT() *MockIWriterMockRecorder {
	return m.recorder
}

// WriteMessage mocks base method.
func (m *MockIWriter) WriteMessage(ctx context.Context, message []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessage", ctx, message)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessage indicates an expected call of WriteMessage.
func (mr *MockIWriterMockRecorder) WriteMessage(ctx, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessage", reflect.TypeOf((*MockIWriter)(nil).WriteMessage), ctx, message)
}
